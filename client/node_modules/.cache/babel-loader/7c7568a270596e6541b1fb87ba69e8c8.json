{"ast":null,"code":"import React,{useEffect}from'react';import{Route,Switch}from'react-router-dom';import{Provider}from'react-redux';import store from'./redux/store';import{loadUser}from'./redux/actions/auth';import setAuthToken from'./utils/setAuthToken';import Navbar from'./components/layout/Navbar';import Landing from'./components/layout/Landing';import Routes from'./components/routing/Routes';import'./App.css';if(localStorage.token){setAuthToken(localStorage.token);}var App=function App(){useEffect(function(){store.dispatch(loadUser());},[]);return/*#__PURE__*/React.createElement(Provider,{store:store},/*#__PURE__*/React.createElement(Navbar,null),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/\",component:Landing}),/*#__PURE__*/React.createElement(Route,{component:Routes})));};export default App;","map":{"version":3,"sources":["D:/Downloads/social-network-master/client/src/App.js"],"names":["React","useEffect","Route","Switch","Provider","store","loadUser","setAuthToken","Navbar","Landing","Routes","localStorage","token","App","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAO,WAAP,CAEA,GAAIC,YAAY,CAACC,KAAjB,CAAwB,CACtBL,YAAY,CAACI,YAAY,CAACC,KAAd,CAAZ,CACD,CAED,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChBZ,SAAS,CAAC,UAAM,CACdI,KAAK,CAACS,QAAN,CAAeR,QAAQ,EAAvB,EACD,CAFQ,CAEN,EAFM,CAAT,CAGA,mBACE,oBAAC,QAAD,EAAU,KAAK,CAAED,KAAjB,eACE,oBAAC,MAAD,MADF,cAEE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEI,OAAjC,EADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAEC,MAAlB,EAFF,CAFF,CADF,CASD,CAbD,CAeA,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { loadUser } from './redux/actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Navbar />\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route component={Routes} />\n      </Switch>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}