{"ast":null,"code":"import axios from 'axios';\nimport store from '../redux/store';\nimport { LOGOUT } from '../redux/actions/types';\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n Intercept any error responses from the api\n and check if the token is no longer valid.\n i.e. Token has expired,\n logout the user if the token has expired.\n**/\n\napi.interceptors.response.use(res => res, err => {\n  if (err.response.data.msg === 'Token is not valid') {\n    store.dispatch({\n      type: LOGOUT\n    });\n  }\n\n  return Promise.reject(err);\n});\nexport default api;","map":{"version":3,"sources":["D:/Downloads/social-network-master/social-network-master/client/src/utils/api.js"],"names":["axios","store","LOGOUT","api","create","baseURL","headers","interceptors","response","use","res","err","data","msg","dispatch","type","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAEA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,MADc;AAEvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFc,CAAb,CAAZ;AAOA;;;;;;;AAOAH,GAAG,CAACI,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACGC,GAAD,IAASA,GADX,EAEGC,GAAD,IAAS;AACP,MAAIA,GAAG,CAACH,QAAJ,CAAaI,IAAb,CAAkBC,GAAlB,KAA0B,oBAA9B,EAAoD;AAClDZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAf;AACD;;AACD,SAAOc,OAAO,CAACC,MAAR,CAAeN,GAAf,CAAP;AACD,CAPH;AAUA,eAAeR,GAAf","sourcesContent":["import axios from 'axios';\nimport store from '../redux/store';\nimport { LOGOUT } from '../redux/actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n/**\n Intercept any error responses from the api\n and check if the token is no longer valid.\n i.e. Token has expired,\n logout the user if the token has expired.\n**/\n\napi.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    if (err.response.data.msg === 'Token is not valid') {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}